{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    ctx.renderPage = () => originalRenderPage({\n      enhanceApp: App => App,\n      enhanceComponent: Component => Component\n    });\n\n    const originalRenderPage = ctx.renderPage;\n    const props = await Document.getInitialProps(ctx);\n    return _objectSpread({}, props);\n  }\n\n  render() {\n    return __jsx(Html, null, __jsx(Head, null), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["F:/reactLearn/next/nextJS-GitHub/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","MyDocument","getInitialProps","ctx","renderPage","originalRenderPage","enhanceApp","App","enhanceComponent","Component","props","render"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,IAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,UAApC,QAAqD,eAArD;;AAIA,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAChC,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAChCA,IAAAA,GAAG,CAACC,UAAJ,GAAiB,MAAMC,kBAAkB,CAAC;AACxCC,MAAAA,UAAU,EAACC,GAAG,IAAIA,GADsB;AAExCC,MAAAA,gBAAgB,EAAEC,SAAS,IAAIA;AAFS,KAAD,CAAzC;;AAKA,UAAMJ,kBAAkB,GAAGF,GAAG,CAACC,UAA/B;AACA,UAAMM,KAAK,GAAG,MAAMd,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAApB;AAEA,6BACKO,KADL;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD,QACE,MAAC,IAAD,OADF,EAGE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CAHF,CADF;AAUD;;AAzB+B;;AA4BlC,eAAeV,UAAf","sourcesContent":["import Document, {Html, Head, Main, NextScript} from 'next/document'\r\n\r\n\r\n\r\nclass MyDocument extends Document {\r\n  static async getInitialProps(ctx) {\r\n    ctx.renderPage = () => originalRenderPage({\r\n      enhanceApp:App => App,\r\n      enhanceComponent: Component => Component\r\n    })\r\n\r\n    const originalRenderPage = ctx.renderPage\r\n    const props = await Document.getInitialProps(ctx)\r\n\r\n    return {\r\n      ...props\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <Html>\r\n        <Head>\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </Html>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyDocument"]},"metadata":{},"sourceType":"module"}