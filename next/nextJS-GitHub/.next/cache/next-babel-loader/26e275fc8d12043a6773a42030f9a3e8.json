{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\n\nclass MyCount extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      count: 0\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    return __jsx(\"span\", null, this.state.count);\n  }\n\n}\n\nfunction MyCountFun() {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0); // 返回[a, b]\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(c => c + 1);\n    }, 1000);\n    return () => clearInterval(interval); // 组件卸载时清除计时器\n  }, []);\n  return __jsx(\"span\", null, count);\n}\n\nexport default MyCountFun;","map":{"version":3,"sources":["F:/reactLearn/next/nextJS-GitHub/pages/test/b.js"],"names":["React","useState","useEffect","MyCount","Component","count","componentDidMount","interval","setInterval","setState","state","componentWillUnmount","clearInterval","render","MyCountFun","setCount","c"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAAA;AAAA;;AAAA,mCAC3B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD2B;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAChC,WAAKC,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB;AADd,OAAd;AAGD,KAJ0B,EAIxB,IAJwB,CAA3B;AAKD;;AACDM,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKJ,QAAT,EAAmB;AACjBK,MAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACD;AACF;;AACDM,EAAAA,MAAM,GAAI;AACR,WAAO,oBAAO,KAAKH,KAAL,CAAWL,KAAlB,CAAP;AACD;;AAlBkC;;AAqBrC,SAASS,UAAT,GAAsB;AACpB,QAAM;AAAA,OAACT,KAAD;AAAA,OAAQU;AAAR,MAAoBd,QAAQ,CAAC,CAAD,CAAlC,CADoB,CACkB;;AACtCC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCO,MAAAA,QAAQ,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAR;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMJ,aAAa,CAACL,QAAD,CAA1B,CAJc,CAIuB;AACtC,GALQ,EAKN,EALM,CAAT;AAMA,SAAO,oBAAOF,KAAP,CAAP;AACD;;AACD,eAAeS,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nclass MyCount extends React.Component{\r\n  state = {\r\n    count: 0\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState({\r\n        count: this.state.count + 1\r\n      })\r\n    }, 1000)\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval)\r\n    }\r\n  }\r\n  render () {\r\n    return <span>{this.state.count}</span>\r\n  }\r\n}\r\n\r\nfunction MyCountFun() {\r\n  const [count, setCount] = useState(0) // 返回[a, b]\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount(c => c + 1)\r\n    }, 1000)\r\n    return () => clearInterval(interval) // 组件卸载时清除计时器\r\n  }, [])\r\n  return <span>{count}</span>\r\n}\r\nexport default MyCountFun"]},"metadata":{},"sourceType":"module"}